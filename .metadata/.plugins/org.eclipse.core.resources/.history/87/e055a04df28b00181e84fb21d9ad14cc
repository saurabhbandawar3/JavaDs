package ds.doublylinkedlist;

import ds.singlylinkedlist.Node;

public class DoublyLinkList {
	private Node first;
	private Node last;
	
	public DoublyLinkList() {
		this.first = null;
		this.last = null;
	}
	
	
	public boolean isEmpty() {
		return(first == null);
	}
	
	public void insertFirst(int data) {
		Node newNode = new Node();
		newNode.data = data;
		if(isEmpty()) {
			last = newNode;
		}else {
			first.previous = newNode;
		}
		newNode.next = first;
		first = newNode;
	}
	
	public void insertLast(int data) {
		Node newNode = new Node();
		newNode.data = data;
		if(isEmpty()) {
			first = newNode;
		}else {
			last.next = newNode;
			last = newNode;
		}
		
	}
		
	public int deleteFirst() {
		int temp  = first.data;
		
		if( first.next == null ) {
			last= null;
		}
		first = first.next;
		return temp;
	}
	
	
	public void display() {
		System.out.println("List (first ---->last)");
		Node current = first;
		while (current !=null)
		{
			current.displayNode();
			current=current.next;
		}
		System.out.println();	
	}
	
	
}
